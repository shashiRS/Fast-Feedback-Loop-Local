file_identifier "PC01";
attribute "version";

namespace GuiSchema;

table PointCloud (version: "0.0.1") {
    points:[float];             // Required - interleaved array of the point coordinates, 
                                //            e.g. [x1, y1 ,z1, x2, y2, z2, ...] 
    pointColors:[float];        // Optional - color of the points as rgb values. 
                                //            Option1: interleaved array (r, g, b) for each point in "points", 
                                //                     e.g. [r1, g1, b1, r2, g2, b2, ...]
                                //                       Each element should be within the range [0.0, 1.0]
                                //                       This will override any other color information
                                //                       This option is slow for large point clouds (over 10k points).
                                //                       Use option 2 for larger point clouds.
                                //            Option2: encode your interleaved color array (r, g, b) as a base64 string, 
                                //                     e.g. "MzOjQDMzw0DNzJzAZmamQGZmxkAAAKDAmpmpQJqZyUAzM6PA"
                                //                       Each element should be a 32 bit float between the range [0.0, 0.1]
                                //                       Endianness must match the endianness of the system running the GUI
    color:string;               // Optional - Option3: color to be applied to the entire point cloud.
                                //                     No effect if pointColors is defined.
    pointSize: [float];         // Optional - diameter of the points in the range [0, max float]
                                //            Option1: Empty array: Default value "1" is used for all points
                                //            Option2: One value: All points will have the same size.
                                //            Option3: One value for each point (number of elements has to be a third of elements in "points"),
                                //                     e.g. [s1, s2, ... ]
                                //                       This option is slow for large point clouds (over 10k points).
                                //                       Use option 4 for larger point clouds.
                                //            Option4: encode your interleaved size array as a base64 string, 
                                //                     e.g. "MzOjQDMzw0DNzJzAZmamQGZmxkAAAKDAmpmpQJqZyUAzM6PA"
                                //                       Endianness must match the endianness of the system running the GUI
}

table PointCloudList {
  pointClouds: [PointCloud];
}

root_type PointCloudList;
