{
  "SimulationInput": {
    "single_file": {
      "RecordingLocation": "full/path/to/file.rrec"
    },
    "list_of_files_read_parallel": {
      "RecordingLocation": [
        "full/path/to/file1.rrec",
        "full/path/to/file2.rrec"
      ]
    },
    "list_of_files_read_sequential": {
      "RecordingLocation": [
        "full/path/to/file1.rrec",
        "full/path/to/file2.rrec"
      ],
      "Split": "File"
    },
    "all_rec_from_folder_with_recording_type_parallel": {
      "RecordingLocation": "D:\\path\\to\\folder",
      "RecordingType": ".rec"
    },
    "all_rec_from_folder_with_wildcard_parallel": {
      "RecordingLocation": "path\\to\\folder\\*.rec"
    },
    "different_folders_read_sequentially_all_files_in_single_folder_parallel": {
      "RecordingLocation": [
        "first/everything/from/this/folder",
        "then/everything/from/this/folder"
      ],
      "Split": "Folder"
    },
    "single_time_interval": {
      "RecordingLocation": "full/path/to/file.rrec",
      "TimeInterval": {
        "StartTimeUs": 1234,
        "EndTimeUs": 3456,
        "Relative": false
      }
    },
    "multiple_time_intervals": {
      "RecordingLocation": "full/path/to/file.rrec",
      "TimeInterval": [
        {
          "StartTimeUs": 1234,
          "EndTimeUs": 3456,
          "Relative": true
        },
        {
          "StartTimeUs": 567,
          "EndTimeUs": 897,
          "Relative": true
        }
      ]
    },
    "load_file_from_env": {
      "RecordingLocation": "$ENV(recording_location)$/some/more/folders",
      "RecordingType": [
        ".rec",
        ".bsig",
        ".hdf5"
      ]
    },
    "load_input_from_playlist_file": {
      "SimulationInputFile": "file/containing/RecordingLocation/Split/TimeInterval/RecordingType.json"
    },
    "load_input_from_multiple_playlist_file": {
      "SimulationInputFile": [
        "file/containing/RecordingLocation/Split/TimeInterval/RecordingType.json",
        "another/file/containing/RecordingLocation/Split/TimeInterval/RecordingType.json"
      ]
    }
  },
  "SimulationExport": {
    "single_export_signal": {
      "ExportSignals": {
        "Signals": [
          "signal.timestamp"
        ],
        "Trigger": "signal.timestamp",
        "ExportType": ".bsig"
      },
      "Output": {
        "OutputPath": "home/exports/sil_sil"
      }
    },
    "list_of_export_signals": {
      "ExportSignals": {
        "Signals": [
          "signal.timestamp",
          "signal.count",
          "signal.objects"
        ],
        "Trigger": "signal.count",
        "ExportType": ".csv"
      },
      "Output": {
        "OutputPath": "D:\\export\\count_objects",
        "Overwrite": true
      }
    },
    "export_signals_from_ExportRun_file": {
      "ExportSignals": {
        "SimulationExportFile": "file/containing/Signals/Trigger.json",
        "ExportType": ".bsig"
      },
      "Output": {
        "OutputPath": "path/to/save/output"
      }
    },
    "export_signals_from_multiple_ExportRun_file": {
      "ExportSignals": {
        "SimulationExportFile": ["file/containing/Signals/Trigger.json","file/containing/more/Signals/Trigger.json"],
        "ExportType": ".bsig"
      },
      "Output": {
        "OutputPath": "path/to/save/output"
      }
    },
    "export_signals_generated_output_name": {
      "ExportSignals": {
        "Signals": [
          "signal.timestamp",
          "signal.count",
          "signal.objects"
        ],
        "Trigger": "signal.timestamp",
        "ExportType": ".csv"
      },
      "Output": {
        "OutputPath": "D:\\export\\count_objects",
        "Overwrite": true,
        "OutputName": "$INPUT$_comparison_$DATE$"
      }
    },
    "multiple_export_types": {
      "ExportSignals": {
        "Signals": [
          "signal.timestamp",
          "signal.count",
          "signal.objects"
        ],
        "Trigger": "signal.timestamp",
        "ExportType": [
          ".bsig",
          ".csv"
        ]
      },
      "Output": {
        "OutputPath": "D:\\export\\count_objects"
      }
    },
    "multiple_export_signals": {
      "ExportSignals": [
        {
          "Signals": [
            "signal.timestamp",
            "signal.count",
            "signal.objects"
          ],
          "Trigger": "signal.timestamp",
          "ExportType": ".csv",
          "ExplicitName": "First_Exporter_$INPUT$_$DATE$"
        },
        {
          "Signals": [
            "signal.timestamp2",
            "signal.count2",
            "signal.objects2"
          ],
          "Trigger": "signal.timestamp2",
          "ExportType": ".csv",
          "ExplicitName": "Second_Exporter_$INPUT$_$DATE$"
        },
        {
          "SimulationExportFile": "file/containing/Signals/Trigger.json",
          "ExportType": [
            ".bsig",
            ".csv"
          ]
        }
      ],
      "Output": {
        "OutputPath": "D:\\export\\count_objects",
        "Overwrite": true,
        "OutputName": "$INPUT$_comparison_$DATE$"
      }
    },
    "export_path_to_env": {
      "ExportSignals": {
        "Signals": [
          "signal.timestamp"
        ],
        "Trigger": "signal.timestamp",
        "ExportType": ".bsig"
      },
      "Output": {
        "OutputPath": "$ENV(output_path)$/sil_sil"
      }
    }
  },
  "SimulationNodes": {
    "single_executable": {
      "Nodes": {
        "Executable": "sim_watcher",
        "ExecutablePath": "here/lies/our/software"
      }
    },
    "single_executable_with_arguments": {
      "Nodes": {
        "Executable": "si_core.exe",
        "ExecutablePath": "D:\\full\\path\\to\\executable",
        "Arguments": "-n"
      }
    },
    "single_executable_with_config": {
      "Nodes": {
        "Executable": "sim_watcher",
        "ExecutablePath": "here/lies/our/software"
      },
      "NodeConfig": "full/path/with/node_config.json"
    },
    "multiple_executables": {
      "Nodes": [
        {
          "Executable": "si_core.exe",
          "ExecutablePath": "D:\\full\\path\\to\\executable",
          "Arguments": "-n"
        },
        {
          "Executable": "some_other_node",
          "ExecutablePath": "they/are/everywhere"
        }
      ]
    },
    "multiple_executables_with_config": {
      "Nodes": [
        {
          "Executable": "si_core.exe",
          "ExecutablePath": "D:\\full\\path\\to\\executable",
          "Arguments": "-n"
        },
        {
          "Executable": "some_other_node",
          "ExecutablePath": "they/are/everywhere"
        }
      ],
      "NodeConfig": "C:\\this\\is\\what\\they\\do.json"
    },
    "load_executables_from_env": {
      "Nodes": [
        {
          "Executable": "sim_watcher",
          "ExecutablePath": "$ENV(executable_location)$/software"
        },
        {
          "Executable": "sim_supervisor",
          "ExecutablePath": "this/might/also/$ENV(executable_location)$/appear"
        }
      ],
      "NodeConfig": "$ENV(config_folder)$\\even\\this\\is\\possible.json"
    }
  },
  "SimulationRun": {
    "single_execution_step": {
      "Run": {
        "load_recording": "SimulationInput"
      }
    },
    "multiple_execution_steps": {
      "Run": {
        "load_recording": "SimulationInput",
        "start_export": "SimulationExport",
        "play": true,
        "stop_export": true
      }
    },
    "execution_steps_with_setup": {
      "Setup": {
        "start_nodes": "SimulationNodes"
      },
      "Run": {
        "load_recording": "SimulationInput",
        "start_export": "SimulationExport"
      }
    },
    "execution_steps_with_teardown": {
      "Run": {
        "load_recording": "SimulationInput",
        "start_export": "SimulationExport"
      },
      "Teardown": {
        "stop_nodes": true
      }
    }
  },
  "SimulationFlows": {
    "required_categories_input_output_SimulationRun": {
      "SimulationInput": "single_file",
      "SimulationExport": "single_export_signal",
      "SimulationRun": "single_execution_step"
    },
    "all_categories_input_output_SimulationRun_simulation_node": {
      "SimulationInput": "list_of_files_read_parallel",
      "SimulationExport": "list_of_export_signals",
      "SimulationRun": "multiple_execution_steps",
      "SimulationNodes": "single_executable"
    },
    "multiple_selections_all_categories": {
      "SimulationInput": [
        "list_of_files_read_parallel",
        "all_rec_from_folder_with_recording_type_parallel"
      ],
      "SimulationExport": [
        "list_of_export_signals",
        "single_export_signal"
      ],
      "SimulationRun": [
        "multiple_execution_steps",
        "execution_steps_with_teardown",
        "execution_steps_with_setup"
      ],
      "SimulationNodes": [
        "single_executable",
        "load_executables_from_env"
      ]
    },
    "single_and_multiple_selections_all_categories_mixed": {
      "SimulationInput": [
        "list_of_files_read_parallel",
        "all_rec_from_folder_with_recording_type_parallel"
      ],
      "SimulationExport": "list_of_export_signals",
      "SimulationRun": [
        "multiple_execution_steps",
        "execution_steps_with_teardown"
      ],
      "SimulationNodes": "load_executables_from_env"
    },
    "flow_with_backend_ports_settings": {
      "SimulationInput": "single_file",
      "SimulationExport": "single_export_signal",
      "SimulationRun": "single_execution_step",
      "BackendSettings": {
        "Ports": {
          "Controlbridge": 8200,
          "Databridge": 8080,
          "DatabridgeBroadcast": 8082
        }
      }
    },
    "flow_with_backend_settings": {
      "SimulationInput": "single_file",
      "SimulationExport": "single_export_signal",
      "SimulationRun": "single_execution_step",
      "BackendSettings": {
        "Ports": {
          "Controlbridge": 8200,
          "Databridge": 8080,
          "DatabridgeBroadcast": 8082
        },
        "EcalNetwork": "ecal_monitoring_example",
        "BackendDirectory": "D:\\path\\to\\backend\\executables",
        "BackendConfig": "path/to/backend/config/file.json"
      }
    },
    "flow_with_backend_settings_from_env": {
      "SimulationInput": "single_file",
      "SimulationExport": "single_export_signal",
      "SimulationRun": "single_execution_step",
      "BackendSettings": {
        "Ports": {
          "Controlbridge": 8200,
          "Databridge": 8080,
          "DatabridgeBroadcast": 8082
        },
        "EcalNetwork": "ecal_monitoring_example",
        "BackendDirectory": "$ENV(backend_dir_location)$\\backend\\executables",
        "BackendConfig": "path/with/$ENV(config_location)$/backend/to/config/file.json"
      }
    }
  },
  "GlobalSettings": {
    "RootDir": "C:\\load\\all\\paths\\from\\here",
    "Logging": {
      "LogFileLevel": "ERROR",
      "LogConsoleLevel": "INFO"
    }
  }
}